
# docker-compose.yml 파일 : 도커 컨테이너 간의 통신, 네트워크 설정, 환경 변수 등을 정의하는 파일 (한꺼번에 컨테이너 실행 가능)

version: '2'
services:
  # zookeeper 서비스 설정
  # Apache ZooKeeper는 분산 코디네이션 서비스로, Kafka의 메타데이터 관리 및 브로커 조정을 담당
  zookeeper:
    image: wurstmeister/zookeeper    # wurstmeister에서 제공하는 공식 zookeeper 도커 이미지 사용
    ports:
      - "2181:2181"                  # zookeeper 포트 매핑 (호스트 머신:컨테이너 내부)
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181    # zookeeper 클라이언트가 접속할 포트 번호 설정

  # kafka 서비스 설정
  # Apache Kafka는 고성능 분산 메시징 시스템으로, 실시간 데이터 스트리밍을 처리
  kafka:
    image: wurstmeister/kafka        # wurstmeister에서 제공하는 공식 kafka 도커 이미지 사용
    ports:
      - "9092:9092"                  # kafka 브로커 포트 매핑 (호스트 머신:컨테이너 내부)
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost     # kafka 브로커가 클라이언트에게 알릴 호스트 이름
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181   # kafka가 사용할 zookeeper 서버의 접속 정보
      KAFKA_CREATE_TOPICS: "demo-topic:1:1"     # 컨테이너 시작 시 자동으로 생성할 토픽 설정 (토픽명:파티션수:복제팩터)
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock   # 도커 소켓 마운트 (컨테이너가 도커 데몬과 통신하기 위해 필요)